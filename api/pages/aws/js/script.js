{"title":"","uid":"1cd19fc71517798e2fa5b7457d1fb06e","text":"const QUESTION_TIMEOUT = 2 * 60 const start_btn = document.querySelector('.start_btn button') const info_box = document.querySelector('.info...","date":"2022-10-27T16:43:44.743Z","updated":"2022-10-27T16:43:44.743Z","comments":true,"path":"api/pages/aws/js/script.js","covers":null,"excerpt":"","content":"const QUESTION_TIMEOUT = 2 * 60\n\nconst start_btn = document.querySelector('.start_btn button')\nconst info_box = document.querySelector('.info_box')\nconst exit_btn = info_box.querySelector('.buttons .quit')\nconst continue_btn = info_box.querySelector('.buttons .restart')\nconst quiz_box = document.querySelector('.quiz_box')\nconst result_box = document.querySelector('.result_box')\nconst option_list = document.querySelector('.option_list')\nconst time_line = document.querySelector('header .time_line')\nconst timeText = document.querySelector('.timer .time_left_txt')\nconst timeCount = document.querySelector('.timer .timer_sec')\nconst check_btn = document.querySelector('footer .check_btn')\nconst next_btn = document.querySelector('footer .next_btn')\nconst bottom_ques_counter = document.querySelector('footer .total_que')\n\ndocument.querySelector('.title').innerText = 'Question Set: ' + questionSet\n\n\nexit_btn.onclick = ()=>{\n    info_box.classList.remove('activeInfo') \n}\n\n\ncontinue_btn.onclick = ()=>{\n    info_box.classList.remove('activeInfo') \n    quiz_box.classList.add('activeQuiz') \n    showQuetions(0) \n    queCounter(1) \n    startTimer(QUESTION_TIMEOUT) \n}\n\n\nstart_btn.onclick = ()=>{\n    // info_box.classList.add('activeInfo') //show info box\n    continue_btn.onclick()\n}\n\n\nlet timeValue =  QUESTION_TIMEOUT\nlet que_count = 0\nlet que_numb = 1\nlet userScore = 0\nlet counter\n\nconst restart_quiz = result_box.querySelector('.buttons .restart')\nconst quit_quiz = result_box.querySelector('.buttons .quit')\n\n\nrestart_quiz.onclick = ()=>{\n    quiz_box.classList.add('activeQuiz') \n    result_box.classList.remove('activeResult') \n    timeValue = QUESTION_TIMEOUT \n    que_count = 0\n    que_numb = 1\n    userScore = 0\n    showQuetions(que_count) \n    queCounter(que_numb) \n    clearInterval(counter) \n    startTimer(timeValue) \n    timeText.textContent = 'Time Left' \n    next_btn.classList.remove('show') \n    check_btn.classList.remove('show') \n    document.querySelector('.explanation').innerHTML = ''\n\n    \n}\n\n\nquit_quiz.onclick = () => {\n    window.location.reload() \n}\n\n\nnext_btn.onclick = () => {\n    document.querySelector('.explanation').innerHTML = ''\n    clearInterval(counter)\n    if(que_count < questions.length - 1) { \n        que_count++ \n        que_numb++ \n        showQuetions(que_count) \n        queCounter(que_numb) \n        startTimer(timeValue) \n        timeText.textContent = 'Time Left' \n        next_btn.classList.remove('show') \n        check_btn.classList.remove('show')\n    }else{\n        showResult() \n    }\n}\n\n\nfunction showQuetions(index){\n    const que_text = document.querySelector('.que_text')\n    \n    let que_tag = '<span style=\"font-weight: 600\">Question '+ (index + 1) + \". </span>\" + questions[index].question\n    let option_tag = questions[index].answers.map(({answer}, i) => '<div class=\"option\" data-answer=\"'+i+'\"><span>' + answer + '</span></div>').join('')\n    que_text.innerHTML = que_tag\n    option_list.innerHTML = option_tag\n    \n    const options = [...option_list.querySelectorAll('.option')]\n    options.map(option => option.setAttribute('onclick', 'optionSelected(this)'))\n}\n\nlet tickIconTag = '<div class=\"icon tick\"><i class=\"fas fa-check\"></i></div>'\nlet crossIconTag = '<div class=\"icon cross\"><i class=\"fas fa-times\"></i></div>'\n\n\nfunction optionSelected(answer){\n    const answers = questions[que_count].answers\n    const totalAnswers = answers.map(({correct}) => correct).reduce((a, b) => a + b, 0)\n    answer.classList.toggle('selected')\n    const allOptions = [...option_list.children]\n    \n    totalAnswers === 1 && allOptions.filter(option => option != answer).map(option => option.classList.remove('selected'))\n    const selectedOptions = allOptions.map(option => option.classList.contains('selected') ? 1 : 0).reduce((a, b) => a + b, 0)\n\n    totalAnswers < selectedOptions && answer.classList.toggle('selected')\n    totalAnswers === selectedOptions && check_btn.classList.add('show')\n}\ncheck_btn.onclick = () => {\n    check_btn.classList.remove('show')\n    next_btn.classList.add('show')\n    const options = [...option_list.children]\n    clearInterval(counter)\n    const answers = questions[que_count].answers\n    const totalAnswers = answers.map(({correct}) => correct).reduce((a, b) => a + b, 0)\n    let currentAnswers = 0\n    for (const option of options) {\n        option.removeAttribute('onclick')\n        option.classList.add('disabled')\n        const selected = option.classList.contains('selected')\n        const {answer, correct} = answers[parseInt(option.getAttribute('data-answer'))]\n        if (selected && correct) {\n            currentAnswers++\n            option.classList.add('correct')\n            option.insertAdjacentHTML('beforeend', tickIconTag)\n        } else if (selected) {\n            option.classList.add('incorrect')\n            option.insertAdjacentHTML('beforeend', crossIconTag)\n        } else if (correct) {\n            option.setAttribute('class', 'option correct-not-selected')\n            option.insertAdjacentHTML('beforeend', tickIconTag)\n        }\n    }\n    document.querySelector('.explanation').innerHTML = questions[que_count].explanation\n    \n    userScore += currentAnswers / totalAnswers\n}\n\nfunction showResult(){\n    info_box.classList.remove('activeInfo') \n    quiz_box.classList.remove('activeQuiz') \n    result_box.classList.add('activeResult') \n    const scoreText = result_box.querySelector('.score_text')\n    document.querySelector('.explanation').innerHTML = ''\n    if (userScore > 3){ \n        \n        let scoreTag = '<span>and congrats! üéâ, You got <p>'+ userScore +'</p> out of <p>'+ questions.length +'</p></span>'\n        scoreText.innerHTML = scoreTag\n    }\n    else if(userScore > 57){ \n        let scoreTag = '<span>and nice üòé, You got <p>'+ userScore +'</p> out of <p>'+ questions.length +'</p></span>'\n        scoreText.innerHTML = scoreTag\n    }\n    else{ \n        let scoreTag = '<span>and sorry üòê, You got only <p>'+ userScore +'</p> out of <p>'+ questions.length +'</p></span>'\n        scoreText.innerHTML = scoreTag\n    }\n}\n\nfunction startTimer(time){\n    counter = setInterval(() => {\n        timeCount.textContent = time\n\n\n        time_line.style.width = parseInt(((QUESTION_TIMEOUT - time) / QUESTION_TIMEOUT) * 80) + 'vw'\n        if(--time < 0) {\n            clearInterval(counter)\n            timeText.textContent = 'Time Off'\n            const options = [...option_list.querySelectorAll('.option')]\n            options.map(option => option.removeAttribute('onclick'))\n            check_btn.onclick()\n        }\n    }, 1000)\n    \n}\n\nfunction queCounter(index){\n    \n    let totalQueCounTag = '<span><p>'+ index +'</p> of <p>'+ questions.length +'</p> Questions</span>'\n    bottom_ques_counter.innerHTML = totalQueCounTag\n}","count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"toc":""}