{"title":"","uid":"1cd19fc71517798e2fa5b7457d1fb06e","text":"import { appendElement, $, decrypt, hash } from './utils.js' const state = { quiz: [], answers: [], name: '' } const loadQuestion = () => { ...","date":"2022-10-27T08:49:34.295Z","updated":"2022-10-27T08:49:34.295Z","comments":true,"path":"api/pages/ask/index.js","covers":null,"excerpt":"","content":"import { appendElement, $, decrypt, hash } from './utils.js'\nconst state = { quiz: [], answers: [], name: '' }\nconst loadQuestion = () => {\n\tconst { question, pick, answers } = state.quiz[state.answers.length]\n\t$('.title').innerHTML = question\n\tappendElement($('.subtitle'), 'div', {\n\t\tclass: 'control',\n\t\tchildren: answers.map(answer => ({\n\t\t\tdiv: {\n\t\t\t\tchild: {\n\t\t\t\t\tlabel: {\n\t\t\t\t\t\tclass: 'radio',\n\t\t\t\t\t\ttext: answer.value,\n\t\t\t\t\t\tchild: {\n\t\t\t\t\t\t\tinput: {\n\t\t\t\t\t\t\t\ttype: pick ? 'checkbox' : 'radio',\n\t\t\t\t\t\t\t\tname: 'answer',\n\t\t\t\t\t\t\t\tvalue: answer.i,\n\t\t\t\t\t\t\t\t...(answer.disabled ? { disabled: 'disabled' } : {})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t...(answer.disabled ? { disabled: 'disabled' } : {}),\n\t\t\t\t\t\t...(answer.hidden ? { display: 'none' } : {})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})),\n\t\tonkeyup: e => e.keyCode === 13 && quizAnswer()\n\t})\n}\n\nconst tryQuiz = () => {\n\tstate.name = $('input[type=\"text\"]').value || ''\n\tconst secret = $('input[type=\"password\"]')\n\tstate.secret = secret.value\n\tfetch('quiz/' + hash(secret.value)).then(res => res.text()).then(encryptedContents => {\n\t\ttry {\n\t\t\tstate.quiz = JSON.parse(decrypt(secret.value, encryptedContents)).map((question, i) => ({ ...question, i, answers: question.answers.map((a, i) => ({ ...a, i })).sort(() => Math.random() - 0.5) })).sort(() => Math.random() - 0.5)\n\t\t\tstate.answers = []\n\t\t\t$('.subtitle').innerHTML = ''\n\t\t\t$('.button').onclick = quizAnswer\n\t\t\tloadQuestion()\n\t\t} catch (e) {\n\t\t\tsecret.value = ''\n\t\t}\n\t})\n}\n\nconst auth = () => {\n\tappendElement($('.subtitle'), 'div', {\n\t\tchildren: [\n\t\t\t{ input: { placeholder: 'Your name is ...', class: 'input is-success is-large', type: 'text', autocomplete: 'off', ...(state.name ? { value: state.name } : {}) } },\n\t\t\t{ br: {} }, { br: {} }, { br: {} },\n\t\t\t{ input: { placeholder: 'Enter Test Key Here ...', class: 'input is-danger is-large', type: 'password', autocomplete: 'off' } }\n\t\t]\n\t})\n\t$('.is-danger').addEventListener('keyup', e => e.keyCode === 13 && tryQuiz())\n}\n\nconst quizAnswer = () => {\n\tconst button = $('.button')\n\tbutton.classList.add('is-loading')\n\tconst B = [...document.querySelectorAll('input[name=\"answer\"]')]\n\t\t.filter(input => input.checked)\n\t\t.map(input => parseInt(input.value))\n\t\t.sort((a, b) => b - a)\n\n\tconst index = state.answers.length\n\tstate.answers.push({ i: state.answers[index].i, B })\n\n\t$('.subtitle').innerHTML = ''\n\t$('.progress').value = parseInt(((index + 1) / state.quiz.length) * 100)\n\tconst isFinished = state.answers.length === state.quiz.length\n\t!isFinished && loadQuestion()\n\tbutton.classList.remove('is-loading')\n\tif (isFinished) {\n\t\tconst answers = state.answers.map(({ B }, index) => {\n\t\t\tconst A = Array(state.quiz[index].answers.length)\n\t\t\t\t.fill(0).map((_, i) => i)\n\t\t\t\t.reverse()\n\t\t\t\t.slice(0, state.quiz[index].pick || 1)\n\t\t\t// score = (A ∩ B) / (A ∪ B)\n\t\t\treturn A.filter(x => B.includes(x)).length / new Set([...A, ...B]).size\n\t\t})\n\t\tconst percent = (answers.reduce((a, b) => a + b, 0) / state.quiz.length) * 100\n\t\t$('.title').innerHTML = 'You did ' + (percent === 100 ? '💯 . . . 👏🥇🏆🎉' : percent + '% 😜 ')\n\t\t$('.subtitle').innerHTML = '<br>Thank you <strong>' + state.name + '</strong> for completing this Test!'\n\t\tbutton.innerText = 'Try Another Quiz'\n\t\twindow.post('ask', state.secret + ':' + state.name, state.answers.map(answer => answer.join(',')).join(' '))\n\t\tstate.secret = ''\n\t\tbutton.onclick = () => {\n\t\t\t$('.subtitle').innerHTML = ''\n\t\t\t$('.title').innerHTML = ''\n\t\t\t$('.progress').value = 0\n\t\t\tbutton.innerText = 'Answer'\n\t\t\tauth()\n\t\t\tbutton.onclick = tryQuiz\n\t\t}\n\t}\n}\n\nauth()\n\n$('.button').onclick = tryQuiz\n","count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"toc":""}